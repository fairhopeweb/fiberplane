/*
 * Fiberplane API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 *
 * Generated by: https://openapi-generator.tech
 */

#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct Workspace {
    #[serde(rename = "id")]
    pub id: String,
    #[serde(rename = "name")]
    pub name: String,
    #[serde(rename = "displayName")]
    pub display_name: String,
    #[serde(rename = "type")]
    pub _type: Type,
    /// This is a mapping from the provider type to the data source selected for that type
    #[serde(rename = "defaultDataSources")]
    pub default_data_sources:
        ::std::collections::HashMap<String, crate::models::SelectedDataSource>,
    #[serde(rename = "ownerId")]
    pub owner_id: String,
    #[serde(rename = "createdAt")]
    pub created_at: String,
    #[serde(rename = "updatedAt")]
    pub updated_at: String,
}

impl Workspace {
    pub fn new(
        id: String,
        name: String,
        display_name: String,
        _type: Type,
        default_data_sources: ::std::collections::HashMap<
            String,
            crate::models::SelectedDataSource,
        >,
        owner_id: String,
        created_at: String,
        updated_at: String,
    ) -> Workspace {
        Workspace {
            id,
            name,
            display_name,
            _type,
            default_data_sources,
            owner_id,
            created_at,
            updated_at,
        }
    }
}

///
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Type {
    #[serde(rename = "personal")]
    Personal,
    #[serde(rename = "organization")]
    Organization,
}
