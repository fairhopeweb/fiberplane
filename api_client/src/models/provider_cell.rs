/*
 * Fiberplane API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 *
 * Generated by: https://openapi-generator.tech
 */

#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct ProviderCell {
    #[serde(rename = "type")]
    pub _type: crate::models::CellType,
    #[serde(rename = "id")]
    pub id: String,
    #[serde(rename = "intent")]
    pub intent: String,
    #[serde(rename = "queryData", skip_serializing_if = "Option::is_none")]
    pub query_data: Option<String>,
    #[serde(rename = "response", skip_serializing_if = "Option::is_none")]
    pub response: Option<Box<crate::models::ProviderResponse>>,
    #[serde(rename = "output", skip_serializing_if = "Option::is_none")]
    pub output: Option<Vec<crate::models::Cell>>,
    #[serde(rename = "title", skip_serializing_if = "Option::is_none")]
    pub title: Option<String>,
    #[serde(rename = "formatting", skip_serializing_if = "Option::is_none")]
    pub formatting: Option<Vec<crate::models::Annotation>>,
    #[serde(rename = "readOnly", skip_serializing_if = "Option::is_none")]
    pub read_only: Option<bool>,
}

impl ProviderCell {
    pub fn new(_type: crate::models::CellType, id: String, intent: String) -> ProviderCell {
        ProviderCell {
            _type,
            id,
            intent,
            query_data: None,
            response: None,
            output: None,
            title: None,
            formatting: None,
            read_only: None,
        }
    }
}
