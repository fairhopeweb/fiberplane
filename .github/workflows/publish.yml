name: Publish

on:
  push:
    branches: ["main"]

env:
  CARGO_TERM_COLOR: always

jobs:
  artifactory:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          # Fetching all tags to get a nice Crate version from git describe
          fetch-depth: 0

      - id: branch
        name: Export branch
        run: echo "branch=${GITHUB_HEAD_REF:-${GITHUB_REF##refs/heads/}}" >> $GITHUB_STATE

      - name: setup-git-credentials
        uses: de-vri-es/setup-git-credentials@v2
        with:
          credentials: "https://fiberplanebot:${{ secrets.PRIVATE_GITHUB_TOKEN }}@github.com/"

      - name: Cache Rust dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: ${{ runner.os }}-cargo-

      - name: Install latest stable
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
          components: rustfmt, clippy

      - name: Configure Artifactory access token
        run: |
          echo -e "[registries.artifactory]\ntoken = \"Bearer ${{ secrets.ARTIFACTORY_ACCESS_TOKEN }}\"" > ~/.cargo/credentials.toml

      - name: Publish changed crates
        run: scripts/publish_crates.py --registry artifactory

  crates-io:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Cache Rust dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: ${{ runner.os }}-cargo-

      - name: Install latest stable
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
          components: rustfmt, clippy

      - name: Cargo login
        uses: actions-rs/cargo@v1
        with:
          command: login
          args: ${{ secrets.CRATES_TOKEN }}

      - name: Publish PDK on crates-io
        run: ./scripts/publish_crates.py --registry crates-io

